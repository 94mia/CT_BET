smooth["Sensitivity", "median.0.01"]
smooth
smooth = all.int.tests[ all.int.tests$smooth == "Smoothed",]
pval <- function(pval) {
x <- ifelse(pval < 0.001, "< 0.001", sprintf("= %03.3f", pval))
return(x)
}
smooth$wt.p.value = pval(smooth$wt.p.value)
num = sapply(smooth, class) == "numeric"
smooth[, num] = round(smooth[, num], 3)
smooth
rm(list=ls())
library(cttools)
library(fslr)
library(oro.dicom)
library(bitops)
library(arules)
library(plyr)
library(reshape2)
library(ggplot2)
library(matrixStats)
library(gridExtra)
library(qdap)
options(matlab.path='/Applications/MATLAB_R2013b.app/bin')
# username <- Sys.info()["user"][[1]]
rootdir = path.expand("~/CT_Registration")
ROIformat = FALSE
study = "Original_Images"
if (ROIformat) {
study = "ROI_images"
}
basedir = file.path(rootdir, "Final_Brain_Seg")
resdir = file.path(basedir, "results")
paperdir = file.path(basedir, "Skull_Strip_Paper")
figdir = file.path(paperdir, "figure")
homedir <- file.path(basedir, study)
homedir
rdas = list.files(path=homedir, pattern=".*_CT_.*Header_Info.Rda",
full.names = TRUE, recursive = TRUE)
stopifnot(!any(grepl("antry", rdas)))
rdas = rdas[grepl("Sorted", rdas)]
rda = data.frame(rda=rdas, stringsAsFactors = FALSE)
rda$id = basename(rda$rda)
rda$id = gsub("(.*)_Header_Info.*", "\\1", rda$id)
rdas
rdas = list.files(path=homedir, pattern=".*_CT_.*Header_Info.Rda",
full.names = TRUE, recursive = TRUE)
rdas
rm(list=ls())
library(cttools)
library(fslr)
library(oro.dicom)
library(bitops)
library(arules)
library(plyr)
library(reshape2)
library(ggplot2)
library(matrixStats)
library(gridExtra)
library(qdap)
options(matlab.path='/Applications/MATLAB_R2013b.app/bin')
# username <- Sys.info()["user"][[1]]
rootdir = path.expand("~/CT_Registration")
ROIformat = FALSE
study = "Original_Images"
if (ROIformat) {
study = "ROI_images"
}
basedir = file.path(rootdir, "Final_Brain_Seg")
resdir = file.path(basedir, "results")
paperdir = file.path(basedir, "Skull_Strip_Paper")
figdir = file.path(paperdir, "figure")
homedir <- file.path(basedir, study)
rdas = list.files(path=homedir, pattern=".*_CT_.*Header_Info.Rda",
full.names = TRUE, recursive = TRUE)
rdas = rdas[!grepl("ungantry", rdas)]
# stopifnot(!any(grepl("antry", rdas)))
rdas = rdas[grepl("Sorted", rdas)]
rda = data.frame(rda=rdas, stringsAsFactors = FALSE)
rda$id = basename(rda$rda)
rda$id = gsub("(.*)_Header_Info.*", "\\1", rda$id)
rda
rm(list=ls())
library(cttools)
library(fslr)
library(oro.dicom)
library(bitops)
library(arules)
library(plyr)
library(reshape2)
library(ggplot2)
library(matrixStats)
library(gridExtra)
library(qdap)
options(matlab.path='/Applications/MATLAB_R2013b.app/bin')
# username <- Sys.info()["user"][[1]]
rootdir = path.expand("~/CT_Registration")
ROIformat = FALSE
study = "Original_Images"
if (ROIformat) {
study = "ROI_images"
}
basedir = file.path(rootdir, "Final_Brain_Seg")
resdir = file.path(basedir, "results")
paperdir = file.path(basedir, "Skull_Strip_Paper")
figdir = file.path(paperdir, "figure")
homedir <- file.path(basedir, study)
rdas = list.files(path=homedir, pattern=".*_CT_.*Header_Info.Rda",
full.names = TRUE, recursive = TRUE)
rdas
gant = rdas[grepl("antry", rdas)]
gant
rdas = list.files(path=homedir, pattern=".*_CT_.*Header_Info.Rda",
full.names = TRUE, recursive = TRUE)
gant = rdas[grepl("antry", rdas)]
gant = gsub("_ungantry", "", gant)
rdas = rdas[ ! (rdas %in% gant)]
stopifnot(!any(grepl("antry", rdas)))
rm(list=ls())
library(cttools)
library(fslr)
library(oro.dicom)
library(bitops)
library(arules)
library(plyr)
library(reshape2)
library(ggplot2)
library(matrixStats)
library(gridExtra)
library(qdap)
options(matlab.path='/Applications/MATLAB_R2013b.app/bin')
# username <- Sys.info()["user"][[1]]
rootdir = path.expand("~/CT_Registration")
ROIformat = FALSE
study = "Original_Images"
if (ROIformat) {
study = "ROI_images"
}
basedir = file.path(rootdir, "Final_Brain_Seg")
resdir = file.path(basedir, "results")
paperdir = file.path(basedir, "Skull_Strip_Paper")
figdir = file.path(paperdir, "figure")
homedir <- file.path(basedir, study)
rdas = list.files(path=homedir, pattern=".*_CT_.*Header_Info.Rda",
full.names = TRUE, recursive = TRUE)
gant = rdas[grepl("antry", rdas)]
gant = gsub("_ungantry", "", gant)
rdas = rdas[ ! (rdas %in% gant)]
# stopifnot(!any(grepl("antry", rdas)))
rdas = rdas[grepl("Sorted", rdas)]
rda = data.frame(rda=rdas, stringsAsFactors = FALSE)
rda$id = basename(rda$rda)
rda$id = gsub("(.*)_Header_Info.*", "\\1", rda$id)
get.val = function(rda, val){
if ("dcmtables" %in% ls()) rm(list="dcmtables")
ungant.rda = gsub("_Header_Info\\.Rda",
"_ungantry_Header_Info\\.Rda",
rda)
if (file.exists(ungant.rda)) rda = ungant.rda
load(rda)
cn = colnames(dcmtables)
n.slice = length(unique(dcmtables[, "0018-0050-SliceThickness"]))
co.kern = unique(dcmtables[, val])
co.kern$n.slice = n.slice
stopifnot(nrow(co.kern) == 1)
co.kern
}
rm(list=ls())
library(cttools)
library(fslr)
library(oro.dicom)
library(bitops)
library(arules)
library(plyr)
library(reshape2)
library(ggplot2)
library(matrixStats)
library(gridExtra)
library(qdap)
options(matlab.path='/Applications/MATLAB_R2013b.app/bin')
# username <- Sys.info()["user"][[1]]
rootdir = path.expand("~/CT_Registration")
ROIformat = FALSE
study = "Original_Images"
if (ROIformat) {
study = "ROI_images"
}
basedir = file.path(rootdir, "Final_Brain_Seg")
resdir = file.path(basedir, "results")
paperdir = file.path(basedir, "Skull_Strip_Paper")
figdir = file.path(paperdir, "figure")
homedir <- file.path(basedir, study)
rdas = list.files(path=homedir, pattern=".*_CT_.*Header_Info.Rda",
full.names = TRUE, recursive = TRUE)
gant = rdas[grepl("antry", rdas)]
gant = gsub("_ungantry", "", gant)
rdas = rdas[ ! (rdas %in% gant)]
# stopifnot(!any(grepl("antry", rdas)))
rdas = rdas[grepl("Sorted", rdas)]
rda = data.frame(rda=rdas, stringsAsFactors = FALSE)
rda$id = basename(rda$rda)
rda$id = gsub("(.*)_Header_Info.*", "\\1", rda$id)
get.val = function(rda, val){
if ("dcmtables" %in% ls()) rm(list="dcmtables")
ungant.rda = gsub("_Header_Info\\.Rda",
"_ungantry_Header_Info\\.Rda",
rda)
if (file.exists(ungant.rda)) rda = ungant.rda
load(rda)
cn = colnames(dcmtables)
n.slice = length(unique(dcmtables[, "0018-0050-SliceThickness"]))
co.kern = unique(dcmtables[, val])
co.kern$n.slice = n.slice
stopifnot(nrow(co.kern) == 1)
co.kern
}
fname = file.path(resdir, "Overlap_Statistics.Rda")
load(fname)
img.id = unique(basename(ddf$img))
img.id = nii.stub(img.id)
rda = rda[ rda$id %in% img.id, ]
rownames(rda) = NULL
rda
rda
rm(list=ls())
library(cttools)
library(fslr)
library(oro.dicom)
library(bitops)
library(arules)
library(plyr)
library(reshape2)
library(ggplot2)
library(matrixStats)
library(gridExtra)
library(qdap)
options(matlab.path='/Applications/MATLAB_R2013b.app/bin')
# username <- Sys.info()["user"][[1]]
rootdir = path.expand("~/CT_Registration")
ROIformat = FALSE
study = "Original_Images"
if (ROIformat) {
study = "ROI_images"
}
basedir = file.path(rootdir, "Final_Brain_Seg")
resdir = file.path(basedir, "results")
paperdir = file.path(basedir, "Skull_Strip_Paper")
figdir = file.path(paperdir, "figure")
homedir <- file.path(basedir, study)
rdas = list.files(path=homedir, pattern=".*_CT_.*Header_Info.Rda",
full.names = TRUE, recursive = TRUE)
gant = rdas[grepl("antry", rdas)]
gant = gsub("_ungantry", "", gant)
rdas = rdas[ ! (rdas %in% gant)]
# stopifnot(!any(grepl("antry", rdas)))
rdas = rdas[grepl("Sorted", rdas)]
rda = data.frame(rda=rdas, stringsAsFactors = FALSE)
rda$id = basename(rda$rda)
rda$id = gsub("(.*)_Header_Info.*", "\\1", rda$id)
get.val = function(rda, val){
if ("dcmtables" %in% ls()) rm(list="dcmtables")
ungant.rda = gsub("_Header_Info\\.Rda",
"_ungantry_Header_Info\\.Rda",
rda)
if (file.exists(ungant.rda)) rda = ungant.rda
load(rda)
cn = colnames(dcmtables)
n.slice = length(unique(dcmtables[, "0018-0050-SliceThickness"]))
co.kern = unique(dcmtables[, val])
co.kern$n.slice = n.slice
stopifnot(nrow(co.kern) == 1)
co.kern
}
fname = file.path(resdir, "Overlap_Statistics.Rda")
load(fname)
rda
# stopifnot(!any(grepl("antry", rdas)))
rdas = rdas[grepl("Sorted", rdas)]
rda = data.frame(rda=rdas, stringsAsFactors = FALSE)
rda$id = basename(rda$rda)
rda$id = gsub("(.*)_Header_Info.*", "\\1", rda$id)
get.val = function(rda, val){
if ("dcmtables" %in% ls()) rm(list="dcmtables")
ungant.rda = gsub("_Header_Info\\.Rda",
"_ungantry_Header_Info\\.Rda",
rda)
if (file.exists(ungant.rda)) rda = ungant.rda
load(rda)
cn = colnames(dcmtables)
n.slice = length(unique(dcmtables[, "0018-0050-SliceThickness"]))
co.kern = unique(dcmtables[, val])
co.kern$n.slice = n.slice
stopifnot(nrow(co.kern) == 1)
co.kern
}
fname = file.path(resdir, "Overlap_Statistics.Rda")
load(fname)
img
ddf
ddf$id
ddf$iimg
img.id = unique(basename(ddf$img))
img.id
img.id = nii.stub(img.id)
rda$id
rm(list=ls())
library(cttools)
library(fslr)
library(oro.dicom)
library(bitops)
library(arules)
library(plyr)
library(reshape2)
library(ggplot2)
library(matrixStats)
library(gridExtra)
library(qdap)
options(matlab.path='/Applications/MATLAB_R2013b.app/bin')
# username <- Sys.info()["user"][[1]]
rootdir = path.expand("~/CT_Registration")
ROIformat = FALSE
study = "Original_Images"
if (ROIformat) {
study = "ROI_images"
}
basedir = file.path(rootdir, "Final_Brain_Seg")
resdir = file.path(basedir, "results")
paperdir = file.path(basedir, "Skull_Strip_Paper")
figdir = file.path(paperdir, "figure")
homedir <- file.path(basedir, study)
rdas = list.files(path=homedir, pattern=".*_CT_.*Header_Info.Rda",
full.names = TRUE, recursive = TRUE)
gant = rdas[grepl("antry", rdas)]
gant = gsub("_ungantry", "", gant)
rdas = rdas[ ! (rdas %in% gant)]
# stopifnot(!any(grepl("antry", rdas)))
rdas = rdas[grepl("Sorted", rdas)]
rda = data.frame(rda=rdas, stringsAsFactors = FALSE)
rda$id = basename(rda$rda)
rda$id = gsub("(.*)_Header_Info.*", "\\1", rda$id)
rda$id = gsub("_ungantry", "", rda$id)
get.val = function(rda, val){
if ("dcmtables" %in% ls()) rm(list="dcmtables")
ungant.rda = gsub("_Header_Info\\.Rda",
"_ungantry_Header_Info\\.Rda",
rda)
if (file.exists(ungant.rda)) rda = ungant.rda
load(rda)
cn = colnames(dcmtables)
n.slice = length(unique(dcmtables[, "0018-0050-SliceThickness"]))
co.kern = unique(dcmtables[, val])
co.kern$n.slice = n.slice
stopifnot(nrow(co.kern) == 1)
co.kern
}
fname = file.path(resdir, "Overlap_Statistics.Rda")
load(fname)
img.id = unique(basename(ddf$img))
img.id = nii.stub(img.id)
rda = rda[ rda$id %in% img.id, ]
rownames(rda) = NULL
rda
rm(list=ls())
library(cttools)
library(fslr)
library(oro.dicom)
library(bitops)
library(arules)
library(plyr)
library(reshape2)
library(ggplot2)
library(matrixStats)
library(gridExtra)
library(qdap)
options(matlab.path='/Applications/MATLAB_R2013b.app/bin')
# username <- Sys.info()["user"][[1]]
rootdir = path.expand("~/CT_Registration")
ROIformat = FALSE
study = "Original_Images"
if (ROIformat) {
study = "ROI_images"
}
basedir = file.path(rootdir, "Final_Brain_Seg")
resdir = file.path(basedir, "results")
paperdir = file.path(basedir, "Skull_Strip_Paper")
figdir = file.path(paperdir, "figure")
homedir <- file.path(basedir, study)
rdas = list.files(path=homedir, pattern=".*_CT_.*Header_Info.Rda",
full.names = TRUE, recursive = TRUE)
gant = rdas[grepl("antry", rdas)]
gant = gsub("_ungantry", "", gant)
rdas = rdas[ ! (rdas %in% gant)]
# stopifnot(!any(grepl("antry", rdas)))
rdas = rdas[grepl("Sorted", rdas)]
rda = data.frame(rda=rdas, stringsAsFactors = FALSE)
rda$id = basename(rda$rda)
rda$id = gsub("(.*)_Header_Info.*", "\\1", rda$id)
rda$id = gsub("_ungantry", "", rda$id)
get.val = function(rda, val){
if ("dcmtables" %in% ls()) rm(list="dcmtables")
ungant.rda = gsub("_Header_Info\\.Rda",
"_ungantry_Header_Info\\.Rda",
rda)
if (file.exists(ungant.rda)) rda = ungant.rda
load(rda)
cn = colnames(dcmtables)
n.slice = length(unique(dcmtables[, "0018-0050-SliceThickness"]))
co.kern = unique(dcmtables[, val])
co.kern$n.slice = n.slice
stopifnot(nrow(co.kern) == 1)
co.kern
}
fname = file.path(resdir, "Overlap_Statistics.Rda")
load(fname)
rda$id
img.id = unique(basename(ddf$img))
img.id = nii.stub(img.id)
rda = rda[ rda$id %in% img.id, ]
rownames(rda) = NULL
rda
img.data = ldply(.data=rda$rda,  get.val,
val=c("0018-1210-ConvolutionKernel",
"0008-0070-Manufacturer",
"0018-1120-GantryDetectorTilt"),
.progress="text")
img.data
rda$rda
colnames(img.data) = c("kern", "man", "tilt", "nslices")
img.data$rda  = rda$rda
img.data$tilt = as.numeric(img.data$tilt)
# data$rda = df$rda
man.tab = sort(table(img.data$man), decreasing=TRUE)
stopifnot(length(man.tab) == 3)
manu= names(man.tab)
manu[manu == 'TOSHIBA'] = "Toshiba"
manu[manu == 'SIEMENS'] = "Siemens"
check.na = function(x){
stopifnot(all(!is.na(x)))
}
check.na(img.data$tilt)
n.gant = sum(img.data$tilt != 0)
n.gant
x = sapply(rda$rda, function(x){
load(x)
st = dcmtables[, "0018-0050-SliceThickness"]
ust = unique(st)
lust = length(ust)
if (lust > 1){
print(ust)
}
lust
})
n.var.slice = sum(x > 1)
proper = function(mystr) {
x= strsplit(mystr, " ")[[1]]
paste(toupper(substr(x, 1, 1)), tolower(substring(x, 2)),
sep= "", collapse=" ")
}
uid = unique(basename(ddf$img))
nscans = length(uid)
num_scans = proper(replace_number(nscans))
pid = gsub("(\\d\\d\\d-(\\d|)\\d\\d\\d).*", "\\1", uid)
pid = unique(pid)
npt = length(pid)
ctr = unique(gsub("(\\d\\d\\d)-.*", "\\1", uid))
n.ctr = length(ctr)
ddf = ddf[ !grepl("refill", ddf$ssimg), ]
progdir = file.path(basedir, "programs")
dir(progdir)
new.ids = readLines(file.path(progdir, "newid_list.txt"))
rm(list=ls())
library(cttools)
library(fslr)
library(oro.dicom)
library(bitops)
library(arules)
library(plyr)
library(reshape2)
library(ggplot2)
library(matrixStats)
library(gridExtra)
library(qdap)
options(matlab.path='/Applications/MATLAB_R2013b.app/bin')
# username <- Sys.info()["user"][[1]]
rootdir = path.expand("~/CT_Registration")
ROIformat = FALSE
study = "Original_Images"
if (ROIformat) {
study = "ROI_images"
}
basedir = file.path(rootdir, "Final_Brain_Seg")
resdir = file.path(basedir, "results")
paperdir = file.path(basedir, "Skull_Strip_Paper")
figdir = file.path(paperdir, "figure")
progdir = file.path(basedir, "programs")
new.ids = readLines(file.path(progdir, "newid_list.txt"))
new.ids
homedir <- file.path(basedir, study)
rdas = list.files(path=homedir, pattern=".*_CT_.*Header_Info.Rda",
full.names = TRUE, recursive = TRUE)
gant = rdas[grepl("antry", rdas)]
gant = gsub("_ungantry", "", gant)
rdas = rdas[ ! (rdas %in% gant)]
# stopifnot(!any(grepl("antry", rdas)))
rdas = rdas[grepl("Sorted", rdas)]
rda = data.frame(rda=rdas, stringsAsFactors = FALSE)
rda$id = basename(rda$rda)
rda$id = gsub("(.*)_Header_Info.*", "\\1", rda$id)
rda$id = gsub("_ungantry", "", rda$id)
rda$id
new.ids
rda$id
